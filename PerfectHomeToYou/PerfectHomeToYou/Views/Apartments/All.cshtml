@model AllApartmentsQueryModel

@{
    ViewData["Title"] = "All Apartments";
}

<form method="get">
    <div class="row mb-5">
        <div class="form-group col-md-4">
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="ApartmentsTypes">Apartments Types</label>
                    <select asp-for="ApartmentsTypes" class="form-control" asp-items="Html.GetEnumSelectList<ApartmentsTypes>().OrderBy(x => x.Value)"></select>
                    <span asp-validation-for="ApartmentsTypes" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="form-group col-md-4">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Sofia, large, ect...">
        </div>
        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Date Created</option>
                    <option value="1">Floor</option>
                    <option value="2">Rent</option>
                    <option value="3">Sell</option>
                </select>
            </div>
        </div>
    </div>
    <input type="submit" class="btn btn-primary d-none">
</form>

@if (Model.Apartments == null)
{
    <h2 class="text-center">No apartments found by given criteria!</h2>
}
else
{
    <div class="row">
        @foreach (var apartment in Model.Apartments)
        {
            <div class="col-md-4">
                <div class="card md-3">
                    <img class="card-img-top" src="@apartment.ImageUrl" alt="@apartment.City @apartment.Neighborhood - @apartment.Price (@apartment.RentOrSell)">
                    <div class="card-body text-center">
                        <h5 class="card-title text-center">@apartment.Price @apartment.City @apartment.Neighborhood (@apartment.RentOrSell)</h5>
                        <a asp-controller="Apartments" asp-action="Details" asp-route-id="@apartment.Id" class="btn btn-primary">View More</a>
                    </div>
                </div>
            </div>
        }
    </div>

}

@{
    var previousPage = Model.CurrentPage - 1;

    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalApartments / AllApartmentsQueryModel.ApartmentsPerPage);
}

<div class="row mb-5">
    <div class="col-md-4">
        <a class="btn btn-primary mt-4 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Apartments"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-brand="@Model.ApartmentsTypes"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Previous</a>
    </div>
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <a class="btn btn-primary float-right mt-4 @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)"
           asp-controller="Apartments"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-brand="@Model.ApartmentsTypes"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Next</a>
    </div>
</div>